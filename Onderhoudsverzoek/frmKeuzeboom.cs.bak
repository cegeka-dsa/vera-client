using System;
using System.Windows.Forms;
using Onderhoudsverzoek.UI;
using vera;
using VeraClient.Agents;
using VeraClient.Helpers;
using VeraClient.Logger;
using VeraClient.Soap;

namespace Onderhoudsverzoek
{
    public partial class frmKeuzeboom : Form
    {
        private SoapClient _client;
        private KeuzeboomAgent _agent;
        private string _keuzeBoomStapCode;

        public frmKeuzeboom()
        {
            InitializeComponent();
            LoggerSingleton.Instance.LogLevel = LogType.Debug;
            LoggerSingleton.Instance.OnLogEventCreated += (type, message) => textBox1.AppendText(type.ToString() + " - " + message + "\r\n");
        }

        private void btnStart_Click(object sender, EventArgs e)
        {
            this.Cursor = Cursors.WaitCursor;
            try
            {
                _client = new SoapClient(txtUrl.Text, txtDomainName.Text, txtUserName.Text, txtPassword.Text);
                _agent = new KeuzeboomAgent(_client, new ApiInvoker(new SoapMessageBuilder(), new SoapMessageParser()));

                var ruimteSoortenAntwoord = _agent.GetRuimteSoorten(txtEenheid.Text);
                foreach (var antwoord in ruimteSoortenAntwoord.@object)
                {
                    cmbRuimteSoorten.Items.Add(new ComboboxItem<DGORMSbasis>(antwoord?.naam?.Value, antwoord));
                }
            }
            finally
            {
                this.Cursor = Cursors.Arrow;
            }
        }

        private void cmbRuimteSoorten_SelectedIndexChanged(object sender, EventArgs e)
        {
            this.Cursor = Cursors.WaitCursor;
            try
            {
                var selectedRuimteSoort = ((ComboboxItem<DGORMSbasis>)cmbRuimteSoorten.SelectedItem).Value;

                var bouwElementen = _agent.GetBouwElementen(txtEenheid.Text, selectedRuimteSoort.code.Value);
                cmbBouwElementen.SelectedIndex = -1;
                cmbBouwElementen.Items.Clear();
                foreach (var antwoord in bouwElementen.@object)
                {
                    cmbBouwElementen.Items.Add(new ComboboxItem<DGOBWEbasis>(antwoord?.naam?.Value, antwoord));
                }
            }
            finally
            {
                this.Cursor = Cursors.Arrow;
            }
        }

        private void cmbBouwElementen_SelectedIndexChanged(object sender, EventArgs e)
        {
            this.Cursor = Cursors.WaitCursor;
            try
            {
                var selectedBouwElement = ((ComboboxItem<DGOBWEbasis>)cmbBouwElementen.SelectedItem).Value;
                var selectedRuimteSoort = ((ComboboxItem<DGORMSbasis>)cmbRuimteSoorten.SelectedItem).Value;

                var onderdelen = _agent.GetOnderdelen(txtEenheid.Text, selectedRuimteSoort.code.Value, selectedBouwElement.code.Value);
                cmbOnderdeel.SelectedIndex = -1;
                cmbOnderdeel.Items.Clear();
                foreach (var antwoord in onderdelen.@object)
                {
                    cmbOnderdeel.Items.Add(new ComboboxItem<DGOODLbasis>(antwoord?.naam?.Value, antwoord));
                }
            }
            finally
            {
                this.Cursor = Cursors.Arrow;
            }
        }

        private void cmbOnderdeel_SelectedIndexChanged(object sender, EventArgs e)
        {
            this.Cursor = Cursors.WaitCursor;
            try
            {
                var selectedRuimteSoort = ((ComboboxItem<DGORMSbasis>)cmbRuimteSoorten.SelectedItem).Value;
                var selectedBouwElement = ((ComboboxItem<DGOBWEbasis>)cmbBouwElementen.SelectedItem).Value;
                var selectedOnderdeel = ((ComboboxItem<DGOODLbasis>)cmbOnderdeel.SelectedItem).Value;

                var gebreken = _agent.GetGebreken(txtEenheid.Text, selectedRuimteSoort.code.Value, selectedBouwElement.code.Value, selectedOnderdeel.code.Value);
                cmbGebrek.SelectedIndex = -1;
                cmbGebrek.Items.Clear();
                foreach (var antwoord in gebreken.@object)
                {
                    cmbGebrek.Items.Add(new ComboboxItem<DGOGBRbasis>(antwoord?.naam?.Value, antwoord));
                }
            }
            finally
            {
                this.Cursor = Cursors.Arrow;
            }
        }

        private void cmbGebrek_SelectedIndexChanged(object sender, EventArgs e)
        {
            this.Cursor = Cursors.WaitCursor;
            try
            {
                var selectedRuimteSoort = ((ComboboxItem<DGORMSbasis>)cmbRuimteSoorten.SelectedItem).Value;
                var selectedBouwElement = ((ComboboxItem<DGOBWEbasis>)cmbBouwElementen.SelectedItem).Value;
                var selectedOnderdeel = ((ComboboxItem<DGOODLbasis>)cmbOnderdeel.SelectedItem).Value;
                var selectedGebrek = ((ComboboxItem<DGOGBRbasis>)cmbGebrek.SelectedItem).Value;

                var specificaties = _agent.GetSpecificatie(txtEenheid.Text, selectedRuimteSoort.code.Value, selectedBouwElement.code.Value, selectedOnderdeel.code.Value, selectedGebrek.code.Value);
                txtSjabloonNaam.Text = specificaties.@object[0]?.reparatiesjabloon?.omschrijving?.Value;
                this._keuzeBoomStapCode = specificaties.@object[0]?.keuzeboomStap?.identificatie?.Value;

                var oorzaken = _agent.GetOorzaken();
                cmbOorzaken.SelectedIndex = -1;
                cmbOorzaken.Items.Clear();
                foreach (var antwoord in oorzaken.@object)
                {
                    cmbOorzaken.Items.Add(new ComboboxItem<DGOORZbasis>(antwoord?.naam?.Value, antwoord));
                }
            }
            finally
            {
                this.Cursor = Cursors.Arrow;
            }
        }

        private void label9_Click(object sender, EventArgs e)
        {

        }
    }
}